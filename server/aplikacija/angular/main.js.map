{"version":3,"file":"main.js","mappings":"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","sources":["./projekti/rwazadaca2/src/app/app-routing.module.ts","./projekti/rwazadaca2/src/app/app.component.ts","./projekti/rwazadaca2/src/app/app.component.html","./projekti/rwazadaca2/src/app/app.module.ts","./projekti/rwazadaca2/src/app/dokumentacija/dokumentacija.component.ts","./projekti/rwazadaca2/src/app/dokumentacija/dokumentacija.component.html","./projekti/rwazadaca2/src/app/film-detalji/film-detalji.component.ts","./projekti/rwazadaca2/src/app/film-detalji/film-detalji.component.html","./projekti/rwazadaca2/src/app/navigacija/navigacija.component.html","./projekti/rwazadaca2/src/app/navigacija/navigacija.component.ts","./projekti/rwazadaca2/src/app/pocetna/pocetna.component.html","./projekti/rwazadaca2/src/app/pocetna/pocetna.component.ts","./projekti/rwazadaca2/src/app/pregled-filmova/pregled-filmova.component.html","./projekti/rwazadaca2/src/app/pregled-filmova/pregled-filmova.component.ts","./projekti/rwazadaca2/src/app/prijava/prijava.component.html","./projekti/rwazadaca2/src/app/prijava/prijava.component.ts","./projekti/rwazadaca2/src/app/prijedlozi/prijedlozi.component.html","./projekti/rwazadaca2/src/app/prijedlozi/prijedlozi.component.ts","./projekti/rwazadaca2/src/app/profil/profil.component.ts","./projekti/rwazadaca2/src/app/profil/profil.component.html","./projekti/rwazadaca2/src/app/servisi/filmovi.service.ts","./projekti/rwazadaca2/src/app/servisi/korisnici.service.ts","./projekti/rwazadaca2/src/app/servisi/zanrovi.service.ts","./projekti/rwazadaca2/src/app/zanr/zanr.component.html","./projekti/rwazadaca2/src/app/zanr/zanr.component.ts","./projekti/rwazadaca2/src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DokumentacijaComponent } from './dokumentacija/dokumentacija.component';\nimport { FilmDetaljiComponent } from './film-detalji/film-detalji.component';\nimport { PocetnaComponent } from './pocetna/pocetna.component';\nimport { PregledFilmovaComponent } from './pregled-filmova/pregled-filmova.component';\nimport { PrijavaComponent } from './prijava/prijava.component';\nimport { PrijedloziComponent } from './prijedlozi/prijedlozi.component';\nimport { ProfilComponent } from './profil/profil.component';\n\nimport { ZanrComponent } from './zanr/zanr.component';\n\n// pocetna verzija za routing\nconst routes: Routes = [\n  { path: '', redirectTo: '/pocetna', pathMatch: 'full' }, // provjeri\n  { path: 'zanrovi', component: ZanrComponent },\n  { path: 'prijava', component: PrijavaComponent },\n  { path: 'pregledFilmova', component: PregledFilmovaComponent },\n  { path: 'prijedloziFilmova', component: PrijedloziComponent },\n  { path: 'pocetna', component: PocetnaComponent },\n  { path: 'pregledFilmova/film/:id', component: FilmDetaljiComponent },\n  { path: 'dokumentacija', component: DokumentacijaComponent },\n  { path: 'profil', component: ProfilComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'RWAzadaca2';\n}\n","<div class=\"all\">\n  <app-navigacija></app-navigacija>\n</div>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { ZanrComponent } from './zanr/zanr.component';\nimport { NavigacijaComponent } from './navigacija/navigacija.component';\nimport { PregledFilmovaComponent } from './pregled-filmova/pregled-filmova.component';\nimport { PrijavaComponent } from './prijava/prijava.component';\nimport { PrijedloziComponent } from './prijedlozi/prijedlozi.component';\nimport { PocetnaComponent } from './pocetna/pocetna.component';\nimport { FilmDetaljiComponent } from './film-detalji/film-detalji.component';\nimport { DokumentacijaComponent } from './dokumentacija/dokumentacija.component';\nimport { ProfilComponent } from './profil/profil.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ZanrComponent,\n    NavigacijaComponent,\n    PregledFilmovaComponent,\n    PrijavaComponent,\n    PrijedloziComponent,\n    PocetnaComponent,\n    FilmDetaljiComponent,\n    DokumentacijaComponent,\n    ProfilComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dokumentacija',\n  templateUrl: './dokumentacija.component.html',\n  styleUrls: ['./dokumentacija.component.scss']\n})\nexport class DokumentacijaComponent {\n\n}\n","<div class=\"o-studentu\">\n  <div class=\"podaci-container\">\n    <a href=\"/\">\n      <img\n        src=\"../fotografije/previous_icon_dark.png\"\n        alt=\"back\"\n        class=\"back-icon\"\n        title=\"Na početnu\"\n      />\n    </a>\n    <h2>Podaci</h2>\n    <div class=\"podaci\">\n      <h3>Ana Škarica</h3>\n      <h3>askarica20@student.foi.hr</h3>\n      <h3>IPS-RPS</h3>\n    </div>\n    <div class=\"slike\">\n      <img src=\"../fotografije/ja.jpg\" alt=\"moja-slika\" />\n    </div>\n    <div>\n      <table class=\"tablica\">\n        <thead>\n          <tr>\n            <th></th>\n            <th>Legenda</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td><div class=\"oznaka zelena\">Sve je napravljeno</div></td>\n            <td>\n              <div class=\"oznaka zuta\">Djelomično je napravljeno</div>\n            </td>\n            <td>\n              <div class=\"oznaka crvena\">Skoro ništa nije napravljeno</div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div>\n      <table class=\"tablica\">\n        <thead>\n          <tr>\n            <th>Resurs Parametri</th>\n            <th>GET čitanje</th>\n            <th>POST kreiranje</th>\n            <th>PUT ažuriranje</th>\n            <th>DELETE brisanje</th>\n            <th>Detaljno</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>api/korisnici</td>\n            <td>\n              <div class=\"oznaka zelena\">vraća listu korisnika</div>\n            </td>\n            <td>\n              <div class=\"oznaka zelena\">kreira novog korisnika</div>\n            </td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td><div></div></td>\n          </tr>\n          <tr>\n            <td><div>api/korisnici/:korime</div></td>\n            <td>\n              <div class=\"oznaka zelena\">vraća određenog korisnika</div>\n            </td>\n            <td><div class=\"oznaka zelena\">405</div></td>\n            <td>\n              <div class=\"oznaka zelena\">Ažurira određenog korisnika</div>\n            </td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td><div></div></td>\n          </tr>\n          <tr>\n            <td><div>api/korisnici/korime/aktivacija</div></td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td><div class=\"oznaka zelena\">405</div></td>\n            <td><div>Aktivira novog korisnika</div></td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td><div></div></td>\n          </tr>\n          <tr>\n            <td><div>api/korisnici/korime/prijava</div></td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td>\n              <div class=\"oznaka zelena\">\n                Provjerava podatke prijave i vraća je li korisnik uspješno\n                prijavljen\n              </div>\n            </td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td><div></div></td>\n          </tr>\n          <tr>\n            <td>\n              <div>\n                api/filmovi/?stranica=broj&brojFilmova=\n                broj[&datum=datum][&zanr=idZanr]\n                [&naziv=dioNazivFilma][&sortiraj=[d|z|n]]\n              </div>\n            </td>\n            <td>\n              <div class=\"oznaka zuta\">\n                vraća listu određenog broja filmova za neku stranicu (broj),\n                opcionalno filtrirano po datumu unosa (datum) i/ili žanru\n                (idZanr) i/ili nazivu filma (dioNazivFilma), te može sortirati\n                uzlazno po datumu(d), nazivu(n) ili žanru(z)\n              </div>\n            </td>\n            <td>\n              <div>\n                Uz dobivene podatke čita sve podatke o filmu s vanjskog servisa\n                i dodaje novi film\n              </div>\n            </td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td>\n              <div>\n                Pri GET metodi nema svih vrsta filtriranja i sortiranja, nego\n                samo neke\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td><div>api/filmovi/:id</div></td>\n            <td>\n              <div class=\"oznaka zelena\">\n                Vraća podatke određenog filma (id)\n              </div>\n            </td>\n            <td><div class=\"oznaka zelena\">405</div></td>\n            <td>\n              <div class=\"oznaka zuta\">Ažurira podatke određenog filma</div>\n            </td>\n            <td>\n              <div class=\"oznaka zelena\">Briše određeni film</div>\n            </td>\n            <td>\n              <div>\n                Pri PUT metodi se updatea samo je li prihvaćen za dodavanje u\n                bazu ili ne\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td><div>api/zanr/</div></td>\n            <td><div class=\"oznaka zelena\">Vraća listu žanrova</div></td>\n            <td><div class=\"oznaka zelena\">Dodaje novi žanr</div></td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td>\n              <div class=\"oznaka zelena\">\n                Briše sve žanrove za koje ne postoji film\n              </div>\n            </td>\n            <td><div></div></td>\n          </tr>\n          <tr>\n            <td><div>api/zanr/:id</div></td>\n            <td>\n              <div class=\"oznaka zelena\">\n                Vraća podatke određenog žanra (id)\n              </div>\n            </td>\n            <td><div class=\"oznaka zelena\">405</div></td>\n            <td>\n              <div class=\"oznaka zelena\">Ažurira postojeći žanr</div>\n            </td>\n            <td><div class=\"oznaka zelena\">Briše određeni žanr</div></td>\n            <td><div></div></td>\n          </tr>\n          <tr>\n            <td><div>api/tmdb/zanr</div></td>\n            <td>\n              <div class=\"oznaka zelena\">\n                Prosljeđuje listu žanrova koji vrati servis TMDB\n              </div>\n            </td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td><div></div></td>\n          </tr>\n          <tr>\n            <td>\n              <div>\n                api/tmdb/filmovi?kljucnaRijec=rijec1[,rijec2]&stranica=broj\n              </div>\n            </td>\n            <td>\n              <div class=\"oznaka zelena\">\n                Prosljeđuje listu filmova koju vrati servis TMDB, a čiji filmovi\n                imaju ključnu riječ ili više njih\n              </div>\n            </td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td><div class=\"oznaka zelena\">501</div></td>\n            <td><div></div></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div>\n      <table class=\"tablica\">\n        <thead>\n          <tr>\n            <th>Uloga</th>\n            <th>Stranica/e</th>\n            <th>Opis</th>\n            <th>Detaljno</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Gost</td>\n            <td><div class=\"oznaka zuta\">Početna</div></td>\n            <td>\n              Prikazuje popis žanrova u bazi podataka i nasumice prikazuje 2\n              filma za svaki žanr koji postoje u bazi podataka.\n            </td>\n            <td>Ne prikazuje filmove iz moje baze, nego iz TMDB-a</td>\n          </tr>\n          <tr>\n            <td>Gost</td>\n            <td><div class=\"oznaka zelena\">Dokumentacija</div></td>\n            <td>\n              <div>Prikazuje stranicu dokumentacija.html opisanu ranije</div>\n            </td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Gost</td>\n            <td>\n              <div class=\"oznaka zuta\">Registracija, Prijava, Odjava</div>\n            </td>\n            <td>\n              <div>\n                Gost se može se registrirati kao novi korisnik.\n                <s>\n                  Kod registracije šalje se e-mail s tokenom za aktivaciju\n                  računa.\n                </s>\n                Lozinka se u bazu ne smije spremati u čitljivom obliku i treba\n                koristiti sol kod spremanja.\n                <s>\n                  Dok se račun ne aktivira nije moguće napraviti prijavu. Kod\n                  prijave treba koristiti autentikacija dvije razine prvo\n                  lozinka s JWT i nakon toga TOTP.\n                </s>\n                Jednom prijavljeni korisnik može se odjaviti u bilo kojem\n                trenutku.\n              </div>\n            </td>\n            <td>\n              <div>\n                nakon registracije treba se ručno prebaciti na stranicu za\n                prijavu, REST servis ne koristi više username i password\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td>Korisnik</td>\n            <td><div class=\"oznaka zelena\">Profil</div></td>\n            <td>\n              <div>\n                Vidi svoje podatke (ime, prezime, korisničko ime, e-mail, ...) i\n                može ih ažurirati. Korisničko ime i e-mail se ne mogu ažurirati.\n                NE ZNAM JEL OVO ZUTO IL ZELENO\n              </div>\n            </td>\n            <td>\n              Mogu se ažurirati samo ove 2 stvari koje su navedene u zadaći (ime\n              i prezime)\n            </td>\n          </tr>\n          <tr>\n            <td>Korisnik</td>\n            <td><div class=\"oznaka zuta\">Filmovi pregled</div></td>\n            <td>\n              <div>\n                Vidi popis svih filmova koji postoje u bazi, može filmove\n                filtrirati po žanru i/ili datumu unosa. Datumsko filtriranje\n                čita podatke od unesenog datuma do današnjeg datuma. Može\n                uzlazno sortirati filmove po nazivu filma, datumu ili nazivu\n                žanra. Može kliknuti na naziv filma i dobiti sve podatke o\n                filmu.\n              </div>\n            </td>\n            <td>\n              Jedino postoji filtriranje po nazivu, abecedno. Nema sortiranja po\n              datumu ili nazivu.\n            </td>\n          </tr>\n          <tr>\n            <td>Korisnik</td>\n            <td><div class=\"oznaka zelena\">Film</div></td>\n            <td>\n              <div>\n                Prikazuje sve podatke o filmu zajedno s posterom i poveznicom na\n                “Galerija slika” za taj film i podatkom koji korisnik je dodao\n                film u bazu.\n              </div>\n            </td>\n            <td>Prikazuju se samo podaci koji su unešeni</td>\n          </tr>\n          <tr>\n            <td>Korisnik</td>\n            <td>\n              <div class=\"oznaka zuta\">Filmovi pretraživanje</div>\n            </td>\n            <td>\n              <div>\n                Može upisati ključne riječi po kojima se pretražuju filmovi sa\n                servisa TMDB (preko api/tmdb). Broj stranica nalazi se u podatku\n                “total_pages”. Ako pronađe film koji mu se sviđa može kliknuti\n                na dodaj u bazu. Film se svim dobivenim podacima dodaje u bazu\n                kao prijedlog, ali čeka odobrenje admina da bude vidljiv u\n                “Filmovi pregled”. Nije potrebno spremati podatke o\n                “production_companies”, “production_countries” i\n                “spoken_languages”. Ako već postoji prijedlog za neki film tada\n                nije moguće kliknuti dodaj u bazu\n              </div>\n            </td>\n            <td>\n              Moguće je kliknuti dvaput na isti film, makar je već u\n              prijedlozima i inserta se makar zanr ne postoji - OVO JE U PRVOJ\n              RADILO KOLKO SE SJECAM\n            </td>\n          </tr>\n          <tr>\n            <td>Korisnik</td>\n            <td>Galerija slika</td>\n            <td>\n              <div>\n                Korisnik vidi galeriju slika postavljenih od strane svih\n                korisnika za odabrani film. Može pretraživati galeriju slika po\n                datumu postavljanja slike tako da unese od i/ili do datum. Može\n                kliknuti na sliku te ga se prebacuje na “Film”\n              </div>\n            </td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Korisnik</td>\n            <td>Slika</td>\n            <td>\n              <div>\n                Može postaviti novu sliku (samo jpg, jpeg, png ili gif\n                maksimalne veličine 500KB) za neki film koji postoji u bazi.\n                Slika se sprema fizički na poslužitelj unutar direktorija\n                slike/id_filma/korime. Direktorij označen sa id_filma\n                predstavlja id filma pod kojim je film spremljen u bazi, a\n                direktroij korime je korisničko ime korisnika koji je dodao\n                sliku. Slika se sprema pod nazivom datum_hash.ekstenzija. Datum\n                je datum postavljanja slike u obliku “godina-mjesec-dan”, a hash\n                je generiran na temelju vremena i korisničkog imena. Ekstenzija\n                je originalna ekstenzija prenesene datoteke\n              </div>\n            </td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Admin</td>\n            <td>Filmovi prijedlozi</td>\n            <td>\n              <div>\n                Vidi popis filmova koji su poslani kao prijedlog za dodavanje,\n                ako odobri film postaje vidljiv svim korisnicima u pogledu\n                “Filmovi pregled”. Kod odobravanja filma preuzima se slika\n                postera s TMDB koja se sprema lokalno na poslužitelj u\n                direktorij posteri. Ako ne odobri film tada se on briše i može\n                se opet kasnije dati kao prijedlog\n              </div>\n            </td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Admin</td>\n            <td>Žanrovi</td>\n            <td>\n              <div>\n                Vidi pregled svih žanrova u bazi podataka, može ažurirati naziv\n                žanra, može obrisati sve žanrove za koje nema filmova u bazi.\n                Može povući listu žanrova s TMDB servisa te može dodati u bazu\n                sve ili samo neke žanrove. Ako pri dodavanju, već postoji neki\n                žanr s istim id-om, tada se takav preskače i uopće se ne šalje\n                zahtjev na servis za dodavanjem. Korisniku se javlja poruka na\n                ekranu koji žanrovi su bili preskočeni jer već postoje\n              </div>\n            </td>\n            <td></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div>\n      <table class=\"tablica\">\n        <thead>\n          <tr>\n            <th>Korak</th>\n            <th>Što je dovršeno</th>\n            <th>Što nije dovršeno</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Kreirati 3 tablice na dokumentaciji i ispuniti ih</td>\n            <td>Sve</td>\n            <td>-</td>\n          </tr>\n          <tr>\n            <td>Prebaciti bazu u sqlite</td>\n            <td>Sve</td>\n            <td>-</td>\n          </tr>\n          <tr>\n            <td>Prebaciti zadaću 1 da funkcionira s novom bazom lokalno</td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Posložiti strukturu prema uputama</td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Pokretanje sa npm start</td>\n            <td>Sve</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Izbrisani svoji ključevi za TMDB</td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>REST koristi port iz konfiguracijske datoteke pod rest.port</td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>REST ne koristi više username i password, nego JWT</td>\n            <td>Izbačen username i password</td>\n            <td>Nije dodano da radi s JWT-om</td>\n          </tr>\n          <tr>\n            <td>Klijentski dio prebačen u Angular</td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Informacije o portovima se čitaju iz environment datoteke</td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Dizajn koristi SASS</td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Dodana bar 3 reCaptcha v3 (prijava, reg + 1 po izboru)</td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>\n              Pozadinski dio web aplikacije poslužuje Angular web aplikaciju.\n            </td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Pozadinski dio web aplikacije poslužuje dokumentaciju</td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>\n              Pozadinski dio web aplikaciije nudi REST api podršku za klijentsku\n              stranu sa resursima koji ne postoje u REST servisu npr.\n              autentifikacija korisnika i generiranje JWT-a.\n            </td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>\n              Pozadinski dio port se mora čitati iz konfiguracijske datoteke iz\n              podatka: app.port\n            </td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Izbačen TOTP i aktivacija mailom kod prijave</td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>\n              Angular aplikacija smije direktno komunicirati sa REST servisom,\n              ali mora obavezno slati JWT.\n            </td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FilmoviService } from '../servisi/filmovi.service';\n\n@Component({\n  selector: 'app-film-detalji',\n  templateUrl: './film-detalji.component.html',\n  styleUrls: ['./film-detalji.component.scss'],\n})\nexport class FilmDetaljiComponent implements OnInit {\n  odabraniFilm: any = '';\n  filmId: any;\n\n  constructor(\n    private aktiviranRoute: ActivatedRoute,\n    private filmoviServis: FilmoviService\n  ) {}\n\n  async ngOnInit() {\n    // JEL TREBAJU SVE OVE NEKAJ VRACAT IL JE OKE I BEZ TOG JER MENI NE BACA ERROR, A NEZ JEL BU DRUGIMA TAK\n    this.filmId = this.aktiviranRoute.snapshot.paramMap.get('id');\n    console.log('this.film id ---> ' + this.filmId);\n\n    this.odabraniFilm = await this.filmoviServis.dajOdabraniFilm(this.filmId);\n  }\n}\n","<div class=\"podaci-filma-kontejner\">\r\n  <div class=\"pregled\">\r\n    <div id=\"film-slika\">\r\n      <!-- TODO ovde u console logu baca error jer se html ucitava prije nego kaj se dobije podatak o putanji slike pa je crveno sve -->\r\n      <img\r\n        src=\"https://image.tmdb.org/t/p/w600_and_h900_bestv2/{{\r\n          odabraniFilm.poster_path\r\n        }}\"\r\n        alt=\"slika-poster\"\r\n        id=\"slika-poster\"\r\n        alt=\"{{ odabraniFilm.poster_path }}\"\r\n      />\r\n    </div>\r\n    <div class=\"podaci-filma-kontejner\">\r\n      <form>\r\n        <label for=\"film-title\">Title</label>\r\n        <input\r\n          id=\"film-title\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.title }}\"\r\n        />\r\n        <label for=\"film-original-language\">Original language</label>\r\n        <input\r\n          id=\"film-original-language\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.original_language }}\"\r\n        />\r\n        <label for=\"film-original-title\">Original title</label>\r\n        <input\r\n          id=\"film-original-title\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.original_title }}\"\r\n        />\r\n        <label for=\"film-overview\">Overview</label>\r\n        <textarea\r\n          readonly\r\n          name=\"film-overview\"\r\n          id=\"film-overview\"\r\n          cols=\"30\"\r\n          rows=\"10\"\r\n          value=\"{{ odabraniFilm.overview }}\"\r\n        ></textarea>\r\n        <label for=\"film-id\">Id</label>\r\n        <input\r\n          id=\"film-id\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.id }}\"\r\n        />\r\n        <label for=\"film-adult\">Adult</label>\r\n        <input\r\n          id=\"film-adult\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.adult }}\"\r\n        />\r\n        <label for=\"film-popularity\">Popularity</label>\r\n        <input\r\n          id=\"film-popularity\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.popularity }}\"\r\n        />\r\n        <label for=\"film-release-date\">Release-date</label>\r\n        <input\r\n          id=\"film-release-date\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{\r\n            odabraniFilm.release_date | date : 'dd.MM.yyyy. hh:mm:ss'\r\n          }}\"\r\n        />\r\n        <label for=\"film-backdroppath\">Backdroppath</label>\r\n\r\n        <input\r\n          id=\"film-backdroppath\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.backdrop_path }}\"\r\n        />\r\n        <label for=\"film-video\">Video</label>\r\n        <input\r\n          id=\"film-video\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.video }}\"\r\n        />\r\n        <label for=\"film-vote-average\">Vote average</label>\r\n        <input\r\n          id=\"film-vote-average\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.vote_average }}\"\r\n        />\r\n        <label for=\"film-vote-count\">Vote count</label>\r\n        <input\r\n          id=\"film-vote-count\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.vote_count }}\"\r\n        />\r\n        <label for=\"film-datum-unosa\">Datum unosa</label>\r\n        <input\r\n          id=\"film-datum-unosa\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.datum_unosa }}\"\r\n        />\r\n        <label for=\"film-homepage\">Homepage</label>\r\n        <input\r\n          id=\"film-homepage\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.vote_count }}\"\r\n        />\r\n        <label for=\"film-imdb-id\">Imdb id</label>\r\n        <input\r\n          id=\"film-imdb-id\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.imdb_id }}\"\r\n        />\r\n        <label for=\"film-status\">Status</label>\r\n        <input\r\n          id=\"film-status\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.status }}\"\r\n        />\r\n        <label for=\"film-tagline\">Tagline</label>\r\n        <input\r\n          id=\"film-tagline\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.tagline }}\"\r\n        />\r\n        <label for=\"film-korisnik-id\">Korisnik id</label>\r\n        <input\r\n          id=\"film-korisnik-id\"\r\n          type=\"text\"\r\n          readonly\r\n          value=\"{{ odabraniFilm.korisnik_id }}\"\r\n        />\r\n      </form>\r\n      <button class=\"lijepiGumb\">Na galeriju</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<nav>\n  <ul>\n    <li>\n      <a\n        routerLink=\"/pocetna\"\n        routerLinkActive=\"active\"\n        ariaCurrentWhenActive=\"page\"\n        >Pocetna</a\n      >\n    </li>\n    <li *ngIf=\"prijavljenAdmin || prijavljenKorisnik\">\n      <a\n        routerLink=\"/zanrovi\"\n        routerLinkActive=\"active\"\n        ariaCurrentWhenActive=\"page\"\n        >Zanrovi</a\n      >\n    </li>\n\n    <li *ngIf=\"prijavljenAdmin || prijavljenKorisnik\">\n      <a\n        routerLink=\"/profil\"\n        routerLinkActive=\"active\"\n        ariaCurrentWhenActive=\"page\"\n      >\n        Profil\n      </a>\n    </li>\n    <li *ngIf=\"!prijavljenAdmin && !prijavljenKorisnik\">\n      <a\n        routerLink=\"/prijava\"\n        routerLinkActive=\"active\"\n        ariaCurrentWhenActive=\"page\"\n      >\n        Registracija\n      </a>\n    </li>\n    <li *ngIf=\"prijavljenAdmin || prijavljenKorisnik\">\n      <a\n        routerLink=\"/pregledFilmova\"\n        routerLinkActive=\"active\"\n        ariaCurrentWhenActive=\"page\"\n      >\n        Pregled filmova\n      </a>\n    </li>\n    <li *ngIf=\"prijavljenAdmin\">\n      <a\n        routerLink=\"/prijedloziFilmova\"\n        routerLinkActive=\"active\"\n        ariaCurrentWhenActive=\"page\"\n      >\n        Prijedlozi\n      </a>\n    </li>\n\n    <li>\n      <a\n        routerLink=\"/dokumentacija\"\n        routerLinkActive=\"active\"\n        ariaCurrentWhenActive=\"page\"\n        >Dokumentacija</a\n      >\n    </li>\n    <li *ngIf=\"prijavljenAdmin || prijavljenKorisnik\">\n      <a\n        routerLink=\"/pocetna\"\n        routerLinkActive=\"active\"\n        ariaCurrentWhenActive=\"page\"\n        (click)=\"odjaviKorisnika()\"\n        >Odjava</a\n      >\n    </li>\n  </ul>\n</nav>\n","import { Component } from '@angular/core';\r\nimport { KorisniciService } from '../servisi/korisnici.service';\r\n\r\n@Component({\r\n  selector: 'app-navigacija',\r\n  templateUrl: './navigacija.component.html',\r\n  styleUrls: ['./navigacija.component.scss'],\r\n})\r\nexport class NavigacijaComponent {\r\n  constructor(private korisniciService: KorisniciService) {}\r\n\r\n  get prijavljenAdmin() {\r\n    return sessionStorage.getItem('prijavljenaUloga') == '1';\r\n  }\r\n  get prijavljenKorisnik() {\r\n    return sessionStorage.getItem('prijavljenaUloga') == '2';\r\n  }\r\n\r\n  odjaviKorisnika() {\r\n    sessionStorage.setItem('prijavljenaUloga', ''); // nema prijavljenog\r\n    sessionStorage.setItem('prijavljeniKorisnikKorime', '');\r\n  }\r\n}\r\n","<div class=\"generirani\">\n  <h2>Početna 🎬</h2>\n  <h3>Preporučeni filmovi po Vašim žanrovima:</h3>\n  <div class=\"generirani-kontejner\">\n    <ul *ngFor=\"let zanr of zanroviMoji\">\n      <li class=\"moji-filmovi\">{{ zanr.name }}</li>\n    </ul>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ZanroviService } from '../servisi/zanrovi.service';\n\n@Component({\n  selector: 'app-pocetna',\n  templateUrl: './pocetna.component.html',\n  styleUrls: ['./pocetna.component.scss'],\n})\nexport class PocetnaComponent implements OnInit {\n  zanroviMoji: any;\n  constructor(private zanroviService: ZanroviService) {}\n\n  ngOnInit(): void {\n    this.prikaziMojeZanrove();\n  }\n\n  async prikaziMojeZanrove() {\n    this.zanroviMoji = await this.zanroviService.dajMojePodatke();\n    console.log(this.zanroviMoji);\n  }\n}\n","<div class=\"pregled\">\n  <input type=\"text\" [(ngModel)]=\"tekstFiltriranje\" />\n  <select id=\"sort\" [(ngModel)]=\"odabraniFilter\">\n    <option value=\"Svi\" selected=\"selected\">Svi</option>\n    <option value=\"Naziv\">\n      Naziv (prvo unesi riječ pa odaberi ovo -pazi na malo veliko slovo)\n    </option>\n    <option value=\"Datum\">Datum</option>\n    <option value=\"Zanr\">Zanr</option>\n  </select>\n  <div id=\"stranicenje\"></div>\n  <h2>Pregled filmova</h2>\n\n  <div id=\"moji-filmovi-kontejner\">\n    <div *ngFor=\"let film of filmoviFiltrirani\">\n      <div class=\"moji-filmovi\">\n        <div\n          class=\"moj-film\"\n          *ngIf=\"film.odobreno == 1\"\n          routerLink=\"/pregledFilmova/film/{{ film.id }}\"\n        >\n          ---> {{ film.title }} {{ film.id }}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { LowerCasePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FilmoviService } from '../servisi/filmovi.service';\n\n@Component({\n  selector: 'app-pregled-filmova',\n  templateUrl: './pregled-filmova.component.html',\n  styleUrls: ['./pregled-filmova.component.scss'],\n})\nexport class PregledFilmovaComponent implements OnInit {\n  filmoviOdobreni: any;\n  //filter = { odobreno: 1 };\n  filmoviFiltrirani: any;\n  filterOdabrani: string = 'Svi';\n  tekstFiltriranje: string = '';\n\n  constructor(private filmoviService: FilmoviService) {}\n\n  get odabraniFilter() {\n    return this.filterOdabrani;\n  }\n\n  set odabraniFilter(value: string) {\n    // zove se svaki put kad se promijeni\n    this.filterOdabrani = value;\n    console.log('value ' + value);\n    if (value == 'Svi') {\n      this.prikaziSve();\n    } else if (value == 'Naziv') {\n      this.prikaziPoNazivu();\n    } else if (value == '') {\n    }\n    // promjena polja prikaza\n  }\n\n  prikaziPoNazivu() {\n    this.filmoviFiltrirani = this.filmoviOdobreni.filter((f: any) =>\n      f.original_title\n        .toLowerCase()\n        .includes(this.tekstFiltriranje.toLowerCase())\n    );\n  }\n\n  prikaziSve() {\n    this.filmoviFiltrirani = this.filmoviOdobreni;\n  }\n\n  async ngOnInit() {\n    console.log('on init');\n    this.filmoviOdobreni = await this.filmoviService.dajMojeFilmove();\n    this.prikaziSve();\n  }\n}\n","<div class=\"login-container registration-container\">\n  <div class=\"lijevo\">\n    <h3>Dobrodošli na</h3>\n    <h2>FOIFLIX</h2>\n    <hr />\n    <ul>\n      <li>Pretražujte filmove</li>\n      <li>Gledajte informacije o filmovima</li>\n      <li>I još mnogo toga!</li>\n    </ul>\n  </div>\n  <div class=\"desno\" *ngIf=\"prikazLogin\">\n    <div class=\"input-container login\">\n      <div id=\"poruka\"></div>\n      <h2>Prijava</h2>\n      <form action=\"/prijava\" method=\"POST\" id=\"formPrijava\">\n        <input\n          name=\"korime\"\n          type=\"text\"\n          placeholder=\"Korisničko ime\"\n          id=\"korime\"\n          required\n          [(ngModel)]=\"inputKorime\"\n        />\n        <input\n          name=\"lozinka\"\n          type=\"password\"\n          placeholder=\"Lozinka\"\n          id=\"lozinka\"\n          required\n          [(ngModel)]=\"inputLozinka\"\n        />\n        <!--\n              <input name=\"totp\" type=\"text\" placeholder=\"TOTP\" id=\"totp\" /> -->\n        <p>\n          Nemaš račun?\n          <span>\n            <Button (click)=\"ucitajSuprotno()\">Registriraj se.</Button>\n          </span>\n        </p>\n        <input\n          id=\"btnSalji\"\n          type=\"submit\"\n          value=\"Prijavi se\"\n          (click)=\"prijavi()\"\n        />\n      </form>\n    </div>\n  </div>\n\n  <!-- REGISTRACIJA -->\n  <div class=\"desno\" *ngIf=\"prikazReg\">\n    <div class=\"input-container registration\">\n      <h2 id=\"naslov\">Registracija</h2>\n      <div id=\"greske\" style=\"color: red\"></div>\n      <form action=\"/registracija\" method=\"POST\" id=\"obrazacRegistracija\">\n        <input\n          id=\"korime\"\n          type=\"text\"\n          name=\"korime\"\n          placeholder=\"Korisničko ime\"\n          required\n          [(ngModel)]=\"korime\"\n        />\n        <input\n          id=\"lozinka\"\n          type=\"password\"\n          name=\"lozinka\"\n          placeholder=\"Lozinka\"\n          required\n          [(ngModel)]=\"lozinka\"\n        />\n        <input\n          id=\"ime\"\n          type=\"text\"\n          name=\"ime\"\n          placeholder=\"Ime\"\n          required\n          [(ngModel)]=\"ime\"\n        />\n        <input\n          id=\"prezime\"\n          type=\"text\"\n          name=\"prezime\"\n          placeholder=\"Prezime\"\n          required\n          [(ngModel)]=\"prezime\"\n        />\n        <input\n          id=\"email\"\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"E-mail\"\n          required\n          [(ngModel)]=\"email\"\n        />\n        <p>\n          Već imaš račun?\n          <span><Button (click)=\"ucitajSuprotno()\">Prijavi se.</Button></span>\n        </p>\n        <button type=\"submit\" id=\"btnRegistriraj\" (click)=\"registriraj()\">\n          Registriraj se\n        </button>\n      </form>\n    </div>\n  </div>\n</div>\n<!-- TODO slozi da se prikazuju ovisno o idu prijavljenog -->\n<div class=\"podaci-prijava\" *ngIf=\"prikazLogin\">\n  <h2>podaci za prijavu:</h2>\n  <p>\n    admin => korime: administrator, lozinka: rwa\n\n    <!--, TOTP:\n        BECRAAAAAAAACBRBAAAAABRAAADRAAAJAAAAKAAAAIAAABAEAAAAMARABEDRABZAAAAARAAEAZAARAZFA5DACAAAAACAAAAHAABRABA-->\n  </p>\n  <p>\n    korisnik => korime: obican, lozinka: rwa\n    <!--, TOTP:\n        AACAAAIFAAAATAAFAAERCAAFAABAAAAGARAACAZAA5AAACIABAAAAAZDBACRAAAAAADRAAAAAADRAAAFAEAAMARAARDRTAADAABAIAA\n      -->\n  </p>\n</div>\n","import { Component } from '@angular/core';\nimport { KorisniciService } from '../servisi/korisnici.service';\n\n@Component({\n  selector: 'app-prijava',\n  templateUrl: './prijava.component.html',\n  styleUrls: ['./prijava.component.scss'],\n})\nexport class PrijavaComponent {\n  inputLozinka: string = '';\n  inputKorime: string = '';\n  prikazLogin = false;\n  prikazReg = true;\n\n  korime: any;\n  lozinka: any;\n  ime: any;\n  prezime: any;\n  email: any;\n\n  constructor(private korisniciService: KorisniciService) {}\n\n  async prijavi() {\n    let odgovor = await this.korisniciService.prijaviKorisnika(\n      this.inputKorime,\n      this.inputLozinka\n    );\n    if (odgovor == false) {\n      window.alert('Neispravni podaci!');\n    } else {\n      sessionStorage.setItem('prijavljenaUloga', odgovor.uloga_id);\n      sessionStorage.setItem('prijavljeniKorisnikKorime', odgovor.korime);\n    }\n  }\n\n  registriraj() {\n    this.korisniciService.dodajKorisnika(\n      this.korime,\n      this.lozinka,\n      this.ime,\n      this.prezime,\n      this.email\n    );\n  }\n\n  // prebacivanje s logina na registraciju i obratno\n  ucitajSuprotno() {\n    this.prikazLogin = !this.prikazLogin;\n    this.prikazReg = !this.prikazReg;\n  }\n}\n","<div id=\"prijedlozi-kontejner\">\n  <div *ngFor=\"let film of filmoviNeodobreni\">\n    <div class=\"moji-filmovi\">\n      <div class=\"moj-film\" *ngIf=\"film.odobreno == 0\">\n        {{ film.title }} {{ film.id }}\n        <button id=\"btnOdobri\" (click)=\"odobriFilm(film.id)\">Odobri</button>\n        <button id=\"btnOdbaci\" (click)=\"odbaciFilm(film.id)\">Odbaci</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FilmoviService } from '../servisi/filmovi.service';\n\n@Component({\n  selector: 'app-prijedlozi',\n  templateUrl: './prijedlozi.component.html',\n  styleUrls: ['./prijedlozi.component.scss'],\n})\nexport class PrijedloziComponent implements OnInit {\n  filmoviNeodobreni: any;\n  filter = { odobreno: 1 };\n\n  constructor(private filmoviService: FilmoviService) {}\n\n  async ngOnInit() {\n    this.filmoviNeodobreni = await this.filmoviService.dajMojeFilmove();\n  }\n\n  odobriFilm(id: Number) {\n    this.filmoviService.odobri(id);\n  }\n\n  odbaciFilm(id: Number) {\n    this.filmoviService.odbaci(id);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { KorisniciService } from '../servisi/korisnici.service';\n\n@Component({\n  selector: 'app-profil',\n  templateUrl: './profil.component.html',\n  styleUrls: ['./profil.component.scss'],\n})\nexport class ProfilComponent implements OnInit {\n  logiraniKorisnik: any = ''; // da ne baca error pri loadanju da je undefined\n\n  korime: any;\n\n  constructor(\n    private korisniciServis: KorisniciService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    this.korime = sessionStorage.getItem('prijavljeniKorisnikKorime');\n    if (this.korime != null) {\n      this.logiraniKorisnik = await this.korisniciServis.dajLogiranog(\n        this.korime\n      );\n    }\n  }\n\n  onSubmit(event: any) {\n    this.korisniciServis.updateajKorisnika(\n      this.korime,\n      event.target.ime.value,\n      event.target.prezime.value\n    );\n  }\n\n  odustani() {\n    this.router.navigate(['/pocetna']);\n  }\n}\n","<div class=\"podaci\">\n  <h2>Moj profil</h2>\n  <form (ngSubmit)=\"onSubmit($event)\">\n    <label for=\"profil-ime\">Ime</label>\n    <input\n      id=\"profil-ime\"\n      type=\"text\"\n      value=\"{{ logiraniKorisnik.ime }}\"\n      name=\"ime\"\n    />\n    <label for=\"profil-prezime\">Prezime</label>\n    <input\n      id=\"profil-prezime\"\n      type=\"text\"\n      value=\"{{ logiraniKorisnik.prezime }}\"\n      name=\"prezime\"\n    />\n    <label for=\"profil-korime\">Korisnicko ime</label>\n    <input\n      id=\"profil-korime\"\n      type=\"text\"\n      readonly\n      value=\"{{ logiraniKorisnik.korime }}\"\n    />\n    <label for=\"profil-email\">E-mail</label>\n    <input\n      id=\"profil-email\"\n      type=\"text\"\n      readonly\n      value=\"{{ logiraniKorisnik.email }}\"\n    />\n    <div class=\"gumbi\">\n      <button id=\"btnSpremi\" type=\"submit\">Spremi</button>\n      <button id=\"btnOdustani\" type=\"button\" (click)=\"odustani()\">\n        Odustani\n      </button>\n    </div>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { FilmoviI } from '../sucelja/FilmoviI';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilmoviService {\n  constructor() {}\n\n  async dajMojeFilmove() {\n    let odgovor = await fetch('http://localhost:9000/api/filmovi');\n    return JSON.parse(await odgovor.text());\n  }\n\n  async dajOdabraniFilm(idFilma: string) {\n    console.log('id filma -----> ' + idFilma);\n\n    let odgovor = await fetch('http://localhost:9000/api/filmovi/' + idFilma);\n    if (odgovor.status == 200) {\n      let podaci = await odgovor.text();\n      console.log('podaci ' + podaci);\n\n      return JSON.parse(podaci);\n    } else {\n      alert('Problem kod preuzimanja podataka:\\n' + odgovor.statusText);\n    }\n  }\n\n  async odobri(idFilma: Number) {\n    let tijelo = {\n      id: idFilma,\n    };\n    let header = new Headers();\n    header.set('Content-Type', 'application/json');\n    let parametri = {\n      method: 'PUT',\n      body: JSON.stringify(tijelo),\n      headers: header,\n    };\n    let podatki = await fetch(\n      'http://localhost:9000/api/filmovi/:id',\n      parametri\n    );\n    await podatki.text();\n  }\n\n  async odbaci(idFilma: Number) {\n    let tijelo = {\n      id: idFilma,\n    };\n    let header = new Headers();\n    header.set('Content-Type', 'application/json');\n    let parametri = {\n      method: 'DELETE',\n      body: JSON.stringify(tijelo),\n      headers: header,\n    };\n    let podatki = await fetch(\n      'http://localhost:9000/api/filmovi/:id',\n      parametri\n    );\n    await podatki.text();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class KorisniciService {\n  constructor(private router: Router) {}\n\n  async dajLogiranog(korime: string) {\n    let odgovor = await fetch('http://localhost:9000/api/korisnici/' + korime);\n    if (odgovor.status == 200) {\n      let podaci = await odgovor.text();\n      console.log(podaci);\n      return JSON.parse(podaci);\n      //prikaziKorisnikovePodatke(podaci);\n    } else {\n      return null;\n      // alert('Problem kod preuzimanja podataka:\\n' + odgovor.statusText);\n    }\n  }\n\n  async prijaviKorisnika(korime: string, lozinka: string) {\n    // lozinka = kodovi.kreirajSHA256(lozinka, 'moja sol');\n    let tijelo = {\n      korime: korime,\n      lozinka: lozinka,\n    };\n\n    let zaglavlje = new Headers();\n    zaglavlje.set('Content-Type', 'application/json');\n\n    let parametri = {\n      method: 'POST',\n      body: JSON.stringify(tijelo),\n      headers: zaglavlje,\n    };\n    /*\n    let odgovor = await fetch(\n      'http://localhost:9000/api/korisnici/' + korime + '/prijava',\n      parametri\n    );*/\n\n    console.log('prije odg');\n\n    let odgovor = await fetch('http://localhost:9001/prijava', parametri);\n    console.log('poslije odg' + odgovor);\n\n    if (odgovor.status == 200) {\n      console.log('uspjesna prijava');\n      this.router.navigate(['/pocetna']);\n\n      let podaci = await odgovor.text();\n      console.log('podaci ' + podaci);\n      return JSON.parse(podaci);\n\n      //  return;\n      //return JSON.parse(await odgovor.text());\n    } else {\n      return false;\n    }\n  }\n\n  async dodajKorisnika(\n    korime: string,\n    lozinka: string,\n    ime: string,\n    prezime: string,\n    email: string\n  ) {\n    let tijelo = {\n      korime: korime,\n      lozinka: lozinka,\n      ime: ime,\n      prezime: prezime,\n      email: email,\n    };\n\n    // TODO da sprema ko sol\n    // mozda probaj s onim ngFormom\n\n    let header = new Headers();\n    header.set('Content-Type', 'application/json');\n\n    let parametri = {\n      method: 'POST',\n      body: JSON.stringify(tijelo),\n      headers: header,\n    };\n\n    let podaci = await fetch('http://localhost:9001/registracija', parametri);\n\n    return await podaci.text();\n  }\n\n  async updateajKorisnika(\n    korime: string,\n    novo_ime: string,\n    novo_prezime: string\n  ) {\n    let tijelo = {\n      korime: korime,\n      ime: novo_ime,\n      prezime: novo_prezime,\n    };\n\n    let header = new Headers();\n    header.set('Content-Type', 'application/json');\n\n    let parametri = {\n      method: 'PUT',\n      body: JSON.stringify(tijelo),\n      headers: header,\n    };\n    let podatki = await fetch(\n      'http://localhost:9000/api/korisnici/' + korime,\n      parametri\n    );\n    await podatki.text();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ZanroviI } from '../sucelja/ZanroviI';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZanroviService {\n  constructor() {}\n\n  async dajMojePodatke() {\n    let mojiZanrovi = new Array<ZanroviI>();\n    let odgovor = await fetch('http://localhost:9000/api/zanr'); // OVO SE CITA IZ ENVIRONMENT VARIJABLI TODO\n    mojiZanrovi = JSON.parse(await odgovor.text()) as Array<ZanroviI>;\n    return mojiZanrovi;\n  }\n\n  async dajPodatke() {\n    let tmdbZanrovi = new Array<ZanroviI>();\n    let odgovor = await fetch('http://localhost:9000/api/tmdb/zanr');\n    tmdbZanrovi = JSON.parse(await odgovor.text()).genres as Array<ZanroviI>;\n    return tmdbZanrovi;\n  }\n\n  async dodajIzTMDBAuMojuBazu(novi_id: number, novi_naziv: string) {\n    let tijelo = {\n      id: novi_id,\n      name: novi_naziv,\n    };\n\n    const zaglavlje = new Headers({ 'Content-Type': 'application/json' });\n\n    const parametri = {\n      method: 'POST',\n      body: JSON.stringify(tijelo),\n      headers: zaglavlje,\n    };\n\n    try {\n      const odgovor = await fetch('http://localhost:9000/api/zanr', parametri);\n      const data = await odgovor.text();\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async updateajZanr(id: number, novi_naziv: string) {\n    // TODO da se automatski azurira i obrise text input field\n\n    let tijelo = {\n      id: id,\n      name: novi_naziv,\n    };\n\n    let zaglavlje = new Headers();\n    zaglavlje.set('Content-Type', 'application/json');\n\n    let parametri = {\n      method: 'PUT',\n      body: JSON.stringify(tijelo),\n      headers: zaglavlje,\n    };\n\n    let podatki = await fetch('http://localhost:9000/api/zanr/:id', parametri);\n    await podatki.text();\n  }\n\n  async izbrisiBezFilmova(podaci: any) {\n    let zanrovi_parse = JSON.parse(podaci);\n    let tijelo = {\n      zanrovi: zanrovi_parse,\n    };\n\n    let zaglavlje = new Headers();\n    zaglavlje.set('Content-Type', 'application/json');\n\n    let parametri = {\n      method: 'DELETE',\n      body: JSON.stringify(tijelo),\n      headers: zaglavlje,\n    };\n\n    let podatki = await fetch('http://localhost:9000/api/zanr', parametri);\n    await podatki.text();\n  }\n}\n","<div class=\"zanrovi-gumbi\">\n  <button class=\"lijepiGumb\" id=\"dajPodatke\" (click)=\"prikaziTMDBZanrove()\">\n    Ucitaj zanrove TMDB\n  </button>\n  <button class=\"lijepiGumb\" id=\"dajMojePodatke\" (click)=\"prikaziMojeZanrove()\">\n    Ucitaj zanrove moja baza\n  </button>\n  <button class=\"lijepiGumb\" id=\"dodajTMDBPodatke\" (click)=\"dodajTMDBPodatke()\">\n    Dodaj iz TMDB-a u moju bazu\n  </button>\n  <button class=\"lijepiGumb\" id=\"promijeniNaziv\" (click)=\"promijeniNaziv()\">\n    Promijeni naziv odabranog\n  </button>\n  <button\n    class=\"lijepiGumb\"\n    id=\"izbrisiBezFilmova\"\n    (click)=\"dajMojePodatkeBrisanje()\"\n  >\n    Izbrisi sve zanrove bez filmova\n  </button>\n</div>\n<div id=\"zanrovi-container\">\n  <ul *ngFor=\"let zanr of zanroviTMDB\">\n    <li>\n      <input\n        type=\"radio\"\n        id=\"{{ zanr.id }}\"\n        name=\"tmdb-zanrovi\"\n        value=\"{{ zanr.name }}\"\n        (change)=\"onChangeOdabraniRadioTmdb($event, zanr.id)\"\n      />\n      {{ zanr.name }} {{ zanr.id }}\n    </li>\n  </ul>\n</div>\n<div id=\"zanrovi-container-moje\">\n  <ul *ngFor=\"let zanr of zanroviMoji\">\n    <li>\n      <input\n        type=\"radio\"\n        id=\"{{ zanr.id }}\"\n        name=\"moji-zanrovi\"\n        value=\"{{ zanr.name }}\"\n        (change)=\"onChangeOdabraniRadioMoj($event, zanr.id)\"\n      />\n      {{ zanr.name }} {{ zanr.id }}\n    </li>\n  </ul>\n</div>\n<div id=\"informacije-zanrovi\"></div>\n<input type=\"text\" id=\"inputPromjenaNaziva\" [(ngModel)]=\"noviNaziv\" />\n","import { Component } from '@angular/core';\nimport { ZanroviService } from '../servisi/zanrovi.service';\n\n@Component({\n  selector: 'app-zanr',\n  templateUrl: './zanr.component.html',\n  styleUrls: ['./zanr.component.scss'],\n})\nexport class ZanrComponent {\n  zanroviMoji: any;\n  zanroviTMDB: any;\n  odabraniRadioNameTmdb: string = '';\n  odabraniRadioIdTmdb: number = 0; // neki defaultni broj\n  odabraniRadioNameMoj: string = '';\n  odabraniRadioIdMoj: number = 0; // neki defaultni broj\n  noviNaziv: any; // two way binding\n  constructor(private zanroviService: ZanroviService) {}\n\n  async prikaziMojeZanrove() {\n    this.zanroviMoji = await this.zanroviService.dajMojePodatke();\n  }\n\n  async prikaziTMDBZanrove() {\n    this.zanroviTMDB = await this.zanroviService.dajPodatke();\n  }\n\n  onChangeOdabraniRadioTmdb(event: any, id: number) {\n    // koji je trenutno odabran\n    this.odabraniRadioNameTmdb = event.target.value;\n    this.odabraniRadioIdTmdb = id;\n  }\n\n  onChangeOdabraniRadioMoj(event: any, id: number) {\n    this.odabraniRadioNameMoj = event.target.value;\n    this.odabraniRadioIdMoj = id;\n  }\n\n  // TODO provjeri jel vec postoji u bazi taj\n  dodajTMDBPodatke() {\n    this.zanroviService.dodajIzTMDBAuMojuBazu(\n      this.odabraniRadioIdTmdb,\n      this.odabraniRadioNameTmdb\n    );\n  }\n\n  promijeniNaziv() {\n    this.zanroviService.updateajZanr(this.odabraniRadioIdMoj, this.noviNaziv);\n  }\n\n  async dajMojePodatkeBrisanje() {\n    try {\n      let odgovor = await fetch('http://localhost:9000/api/zanr');\n      if (odgovor.status === 200) {\n        const podaci = await odgovor.text();\n        this.zanroviService.izbrisiBezFilmova(podaci);\n      } else {\n        alert(`Problem kod preuzimanja podataka: ${odgovor.statusText}`);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","DokumentacijaComponent","FilmDetaljiComponent","PocetnaComponent","PregledFilmovaComponent","PrijavaComponent","PrijedloziComponent","ProfilComponent","ZanrComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","consts","template","i0","BrowserModule","FormsModule","NavigacijaComponent","AppModule","bootstrap","declarations","aktiviranRoute","filmoviServis","ngOnInit","filmId","snapshot","paramMap","get","console","log","odabraniFilm","dajOdabraniFilm","korisniciService","prijavljenAdmin","sessionStorage","getItem","prijavljenKorisnik","odjaviKorisnika","setItem","zanroviService","prikaziMojeZanrove","zanroviMoji","dajMojePodatke","filmoviService","odabraniFilter","filterOdabrani","value","prikaziSve","prikaziPoNazivu","filmoviFiltrirani","filmoviOdobreni","filter","f","original_title","toLowerCase","includes","tekstFiltriranje","dajMojeFilmove","prijavi","odgovor","prijaviKorisnika","inputKorime","inputLozinka","window","alert","uloga_id","korime","registriraj","dodajKorisnika","lozinka","ime","prezime","email","ucitajSuprotno","prikazLogin","prikazReg","odobreno","filmoviNeodobreni","odobriFilm","id","odobri","odbaciFilm","odbaci","korisniciServis","router","logiraniKorisnik","dajLogiranog","onSubmit","event","updateajKorisnika","target","odustani","navigate","ctx","FilmoviService","fetch","JSON","parse","text","idFilma","status","podaci","statusText","tijelo","header","Headers","set","parametri","method","body","stringify","headers","podatki","factory","providedIn","KorisniciService","zaglavlje","novo_ime","novo_prezime","ZanroviService","mojiZanrovi","Array","dajPodatke","tmdbZanrovi","genres","dodajIzTMDBAuMojuBazu","novi_id","novi_naziv","name","data","error","updateajZanr","izbrisiBezFilmova","zanrovi_parse","zanrovi","prikaziTMDBZanrove","zanroviTMDB","onChangeOdabraniRadioTmdb","odabraniRadioNameTmdb","odabraniRadioIdTmdb","onChangeOdabraniRadioMoj","odabraniRadioNameMoj","odabraniRadioIdMoj","dodajTMDBPodatke","promijeniNaziv","noviNaziv","dajMojePodatkeBrisanje","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
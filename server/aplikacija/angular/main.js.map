{"version":3,"file":"main.js","mappings":"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","sources":["./projekti/rwazadaca2/src/app/app-routing.module.ts","./projekti/rwazadaca2/src/app/app.component.ts","./projekti/rwazadaca2/src/app/app.component.html","./projekti/rwazadaca2/src/app/app.module.ts","./projekti/rwazadaca2/src/app/film-detalji/film-detalji.component.ts","./projekti/rwazadaca2/src/app/film-detalji/film-detalji.component.html","./projekti/rwazadaca2/src/app/navigacija/navigacija.component.html","./projekti/rwazadaca2/src/app/navigacija/navigacija.component.ts","./projekti/rwazadaca2/src/app/pocetna/pocetna.component.html","./projekti/rwazadaca2/src/app/pocetna/pocetna.component.ts","./projekti/rwazadaca2/src/app/pregled-filmova/pregled-filmova.component.html","./projekti/rwazadaca2/src/app/pregled-filmova/pregled-filmova.component.ts","./projekti/rwazadaca2/src/app/prijava/prijava.component.html","./projekti/rwazadaca2/src/app/prijava/prijava.component.ts","./projekti/rwazadaca2/src/app/prijedlozi/prijedlozi.component.html","./projekti/rwazadaca2/src/app/prijedlozi/prijedlozi.component.ts","./projekti/rwazadaca2/src/app/servisi/filmovi.service.ts","./projekti/rwazadaca2/src/app/servisi/korisnici.service.ts","./projekti/rwazadaca2/src/app/servisi/zanrovi.service.ts","./projekti/rwazadaca2/src/app/zanr/zanr.component.html","./projekti/rwazadaca2/src/app/zanr/zanr.component.ts","./projekti/rwazadaca2/src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FilmDetaljiComponent } from './film-detalji/film-detalji.component';\nimport { NavigacijaComponent } from './navigacija/navigacija.component';\nimport { PocetnaComponent } from './pocetna/pocetna.component';\nimport { PregledFilmovaComponent } from './pregled-filmova/pregled-filmova.component';\nimport { PrijavaComponent } from './prijava/prijava.component';\nimport { PrijedloziComponent } from './prijedlozi/prijedlozi.component';\n\nimport { ZanrComponent } from './zanr/zanr.component';\n\n// pocetna verzija za routing\nconst routes: Routes = [\n  { path: '', redirectTo: '/pocetna', pathMatch: 'full' }, // provjeri\n  { path: 'zanrovi', component: ZanrComponent },\n  { path: 'prijava', component: PrijavaComponent },\n  { path: 'pregledFilmova', component: PregledFilmovaComponent },\n  { path: 'prijedloziFilmova', component: PrijedloziComponent },\n  { path: 'pocetna', component: PocetnaComponent },\n  { path: 'pregledFilmova/film/:id', component: FilmDetaljiComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'RWAzadaca2';\n}\n","<div class=\"all\">\n  <app-navigacija></app-navigacija>\n</div>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { ZanrComponent } from './zanr/zanr.component';\nimport { NavigacijaComponent } from './navigacija/navigacija.component';\nimport { PregledFilmovaComponent } from './pregled-filmova/pregled-filmova.component';\nimport { PrijavaComponent } from './prijava/prijava.component';\nimport { PrijedloziComponent } from './prijedlozi/prijedlozi.component';\nimport { PocetnaComponent } from './pocetna/pocetna.component';\nimport { FilmDetaljiComponent } from './film-detalji/film-detalji.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ZanrComponent,\n    NavigacijaComponent,\n    PregledFilmovaComponent,\n    PrijavaComponent,\n    PrijedloziComponent,\n    PocetnaComponent,\n    FilmDetaljiComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FilmoviService } from '../servisi/filmovi.service';\n\n@Component({\n  selector: 'app-film-detalji',\n  templateUrl: './film-detalji.component.html',\n  styleUrls: ['./film-detalji.component.scss'],\n})\nexport class FilmDetaljiComponent implements OnInit {\n  odabraniFilm: any;\n  filmId: any;\n\n  constructor(\n    private aktiviranRoute: ActivatedRoute,\n    private filmoviServis: FilmoviService\n  ) {}\n\n  async ngOnInit() {\n    // JEL TREBAJU SVE OVE NEKAJ VRACAT IL JE OKE I BEZ TOG JER MENI NE BACA ERROR, A NEZ JEL BU DRUGIMA TAK\n    this.filmId = this.aktiviranRoute.snapshot.paramMap.get('id');\n    console.log('this.film id ---> ' + this.filmId);\n\n    this.odabraniFilm = await this.filmoviServis.dajOdabraniFilm(this.filmId);\n  }\n}\n","<div class=\"podaci-filma-kontejner\">\n  <div class=\"pregled\">\n    <div id=\"film-slika\">\n      <!-- TODO ovde u console logu baca error jer se html ucitava prije nego kaj se dobije podatak o putanji slike pa je crveno sve -->\n      <img\n        src=\"https://image.tmdb.org/t/p/w600_and_h900_bestv2/{{\n          odabraniFilm.poster_path\n        }}\"\n        alt=\"slika-poster\"\n        id=\"slika-poster\"\n        alt=\"{{ odabraniFilm.poster_path }}\"\n      />\n    </div>\n    <div class=\"podaci-filma-kontejner\">\n      <form>\n        <label for=\"film-title\">Title</label>\n        <input\n          id=\"film-title\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.title }}\"\n        />\n        <label for=\"film-original-language\">Original language</label>\n        <input\n          id=\"film-original-language\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.original_language }}\"\n        />\n        <label for=\"film-original-title\">Original title</label>\n        <input\n          id=\"film-original-title\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.original_title }}\"\n        />\n        <label for=\"film-overview\">Overview</label>\n        <textarea\n          readonly\n          name=\"film-overview\"\n          id=\"film-overview\"\n          cols=\"30\"\n          rows=\"10\"\n          value=\"{{ odabraniFilm.overview }}\"\n        ></textarea>\n        <label for=\"film-id\">Id</label>\n        <input\n          id=\"film-id\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.id }}\"\n        />\n        <label for=\"film-adult\">Adult</label>\n        <input\n          id=\"film-adult\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.adult }}\"\n        />\n        <label for=\"film-popularity\">Popularity</label>\n        <input\n          id=\"film-popularity\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.popularity }}\"\n        />\n        <label for=\"film-release-date\">Release-date</label>\n        <input\n          id=\"film-release-date\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.release_date }}\"\n        />\n        <label for=\"film-backdroppath\">Backdroppath</label>\n\n        <input\n          id=\"film-backdroppath\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.backdrop_path }}\"\n        />\n        <label for=\"film-video\">Video</label>\n        <input\n          id=\"film-video\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.video }}\"\n        />\n        <label for=\"film-vote-average\">Vote average</label>\n        <input\n          id=\"film-vote-average\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.vote_average }}\"\n        />\n        <label for=\"film-vote-count\">Vote count</label>\n        <input\n          id=\"film-vote-count\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.vote_count }}\"\n        />\n        <label for=\"film-datum-unosa\">Datum unosa</label>\n        <input\n          id=\"film-datum-unosa\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.datum_unosa }}\"\n        />\n        <label for=\"film-homepage\">Homepage</label>\n        <input\n          id=\"film-homepage\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.vote_count }}\"\n        />\n        <label for=\"film-imdb-id\">Imdb id</label>\n        <input\n          id=\"film-imdb-id\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.imdb_id }}\"\n        />\n        <label for=\"film-status\">Status</label>\n        <input\n          id=\"film-status\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.status }}\"\n        />\n        <label for=\"film-tagline\">Tagline</label>\n        <input\n          id=\"film-tagline\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.tagline }}\"\n        />\n        <label for=\"film-korisnik-id\">Korisnik id</label>\n        <input\n          id=\"film-korisnik-id\"\n          type=\"text\"\n          readonly\n          value=\"{{ odabraniFilm.korisnik_id }}\"\n        />\n      </form>\n      <button class=\"lijepiGumb\">Na galeriju</button>\n    </div>\n  </div>\n</div>\n","<nav>\n  <ul>\n    <li>\n      <a\n        routerLink=\"/zanrovi\"\n        routerLinkActive=\"active\"\n        ariaCurrentWhenActive=\"page\"\n        >Zanrovi</a\n      >\n    </li>\n    <li>\n      <a\n        routerLink=\"/pregledFilmova\"\n        routerLinkActive=\"active\"\n        ariaCurrentWhenActive=\"page\"\n        *ngIf=\"prijavljen == '2' || prijavljen == '1'\"\n      >\n        Pregled filmova\n      </a>\n    </li>\n    <li>\n      <a\n        routerLink=\"/prijava\"\n        routerLinkActive=\"active\"\n        ariaCurrentWhenActive=\"page\"\n        *ngIf=\"!prijavljen\"\n      >\n        Prijava\n      </a>\n    </li>\n    <li>\n      <a\n        routerLink=\"/prijedloziFilmova\"\n        routerLinkActive=\"active\"\n        ariaCurrentWhenActive=\"page\"\n        *ngIf=\"prijavljen == '1'\"\n      >\n        Prijedlozi\n      </a>\n    </li>\n    <li>\n      <a\n        routerLink=\"/pocetna\"\n        routerLinkActive=\"active\"\n        ariaCurrentWhenActive=\"page\"\n        >Pocetna</a\n      >\n    </li>\n    <li>\n      <a\n        routerLink=\"/pocetna\"\n        routerLinkActive=\"active\"\n        ariaCurrentWhenActive=\"page\"\n        (click)=\"odjaviKorisnika()\"\n        *ngIf=\"prijavljen == '1' || prijavljen == '2'\"\n        >Odjava</a\n      >\n    </li>\n  </ul>\n</nav>\n","import { AfterContentChecked, Component, OnChanges } from '@angular/core';\n\nimport { ChangeDetectorRef } from '@angular/core'; // rerenderanje\n\n@Component({\n  selector: 'app-navigacija',\n  templateUrl: './navigacija.component.html',\n  styleUrls: ['./navigacija.component.scss'],\n})\nexport class NavigacijaComponent implements AfterContentChecked {\n  prijavljen: string | null = sessionStorage.getItem('prijavljeniKorisnik');\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  odjaviKorisnika() {\n    sessionStorage.setItem('prijavljeniKorisnik', ''); //nema prijavljenog\n  }\n\n  ngAfterContentChecked(): void {\n    console.log(' ngAfterContentChecked');\n    this.cdr.detectChanges();\n    // ovo se svako malo pozove\n  }\n}\n","<div class=\"generirani\">\n  <h2>Početna 🎬</h2>\n  <h3>Preporučeni filmovi po Vašim žanrovima:</h3>\n  <div class=\"generirani-kontejner\">\n    <ul *ngFor=\"let zanr of zanroviMoji\">\n      <li class=\"moji-filmovi\">{{ zanr.name }}</li>\n    </ul>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ZanroviService } from '../servisi/zanrovi.service';\n\n@Component({\n  selector: 'app-pocetna',\n  templateUrl: './pocetna.component.html',\n  styleUrls: ['./pocetna.component.scss'],\n})\nexport class PocetnaComponent implements OnInit {\n  zanroviMoji: any;\n  constructor(private zanroviService: ZanroviService) {}\n\n  ngOnInit(): void {\n    this.prikaziMojeZanrove();\n  }\n\n  async prikaziMojeZanrove() {\n    this.zanroviMoji = await this.zanroviService.dajMojePodatke();\n    console.log(this.zanroviMoji);\n  }\n}\n","<div class=\"pregled\">\n  <select id=\"sort\">\n    <option value=\"Naziv\">Naziv</option>\n    <option value=\"Datum\">Datum</option>\n    <option value=\"Zanr\">Zanr</option>\n  </select>\n  <div id=\"stranicenje\"></div>\n  <h2>Pregled filmova</h2>\n\n  <div id=\"moji-filmovi-kontejner\">\n    <div *ngFor=\"let film of filmoviOdobreni\">\n      <div class=\"moji-filmovi\">\n        <div\n          class=\"moj-film\"\n          *ngIf=\"film.odobreno == 1\"\n          routerLink=\"/pregledFilmova/film/{{ film.id }}\"\n        >\n          ---> {{ film.title }} {{ film.id }}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FilmoviService } from '../servisi/filmovi.service';\n\n@Component({\n  selector: 'app-pregled-filmova',\n  templateUrl: './pregled-filmova.component.html',\n  styleUrls: ['./pregled-filmova.component.scss'],\n})\nexport class PregledFilmovaComponent implements OnInit {\n  filmoviOdobreni: any;\n  filter = { odobreno: 1 };\n\n  constructor(private filmoviService: FilmoviService) {}\n\n  async ngOnInit() {\n    console.log('on init');\n    this.filmoviOdobreni = await this.filmoviService.dajMojeFilmove();\n  }\n}\n","<div class=\"login-container registration-container\">\n  <div class=\"lijevo\">\n    <h3>Dobrodošli na</h3>\n    <h2>FOIFLIX</h2>\n    <hr />\n    <ul>\n      <li>Pretražujte filmove</li>\n      <li>Gledajte informacije o filmovima</li>\n      <li>I još mnogo toga!</li>\n    </ul>\n  </div>\n  <div class=\"desno\" *ngIf=\"prikazLogin\">\n    <div class=\"input-container login\">\n      <div id=\"poruka\"></div>\n      <h2>Prijava</h2>\n      <form action=\"/prijava\" method=\"POST\" id=\"formPrijava\">\n        <input\n          name=\"korime\"\n          type=\"text\"\n          placeholder=\"Korisničko ime\"\n          id=\"korime\"\n          required\n          [(ngModel)]=\"inputKorime\"\n        />\n        <input\n          name=\"lozinka\"\n          type=\"password\"\n          placeholder=\"Lozinka\"\n          id=\"lozinka\"\n          required\n          [(ngModel)]=\"inputLozinka\"\n        />\n        <!--\n              <input name=\"totp\" type=\"text\" placeholder=\"TOTP\" id=\"totp\" /> -->\n        <p>\n          Nemaš račun?\n          <span>\n            <Button (click)=\"ucitajSuprotno()\">Registriraj se.</Button>\n          </span>\n        </p>\n        <input\n          id=\"btnSalji\"\n          type=\"submit\"\n          value=\"Prijavi se\"\n          (click)=\"prijavi()\"\n        />\n      </form>\n    </div>\n  </div>\n\n  <!-- REGISTRACIJA -->\n  <div class=\"desno\" *ngIf=\"prikazReg\">\n    <div class=\"input-container registration\">\n      <h2 id=\"naslov\">Registracija</h2>\n      <div id=\"greske\" style=\"color: red\"></div>\n      <form action=\"/registracija\" method=\"POST\" id=\"obrazacRegistracija\">\n        <input\n          id=\"korime\"\n          type=\"text\"\n          name=\"korime\"\n          placeholder=\"Korisničko ime\"\n          required\n          [(ngModel)]=\"korime\"\n        />\n        <input\n          id=\"lozinka\"\n          type=\"password\"\n          name=\"lozinka\"\n          placeholder=\"Lozinka\"\n          required\n          [(ngModel)]=\"lozinka\"\n        />\n        <input\n          id=\"ime\"\n          type=\"text\"\n          name=\"ime\"\n          placeholder=\"Ime\"\n          required\n          [(ngModel)]=\"ime\"\n        />\n        <input\n          id=\"prezime\"\n          type=\"text\"\n          name=\"prezime\"\n          placeholder=\"Prezime\"\n          required\n          [(ngModel)]=\"prezime\"\n        />\n        <input\n          id=\"email\"\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"E-mail\"\n          required\n          [(ngModel)]=\"email\"\n        />\n        <p>\n          Već imaš račun?\n          <span><Button (click)=\"ucitajSuprotno()\">Prijavi se.</Button></span>\n        </p>\n        <button type=\"submit\" id=\"btnRegistriraj\" (click)=\"registriraj()\">\n          Registriraj se\n        </button>\n      </form>\n    </div>\n  </div>\n</div>\n<!-- TODO slozi da se prikazuju ovisno o idu prijavljenog -->\n<div class=\"podaci-prijava\" *ngIf=\"prikazLogin\">\n  <h2>podaci za prijavu:</h2>\n  <p>\n    admin => korime: administrator, lozinka: rwa\n\n    <!--, TOTP:\n        BECRAAAAAAAACBRBAAAAABRAAADRAAAJAAAAKAAAAIAAABAEAAAAMARABEDRABZAAAAARAAEAZAARAZFA5DACAAAAACAAAAHAABRABA-->\n  </p>\n  <p>\n    korisnik => korime: obican, lozinka: rwa\n    <!--, TOTP:\n        AACAAAIFAAAATAAFAAERCAAFAABAAAAGARAACAZAA5AAACIABAAAAAZDBACRAAAAAADRAAAAAADRAAAFAEAAMARAARDRTAADAABAIAA\n      -->\n  </p>\n</div>\n","import { Component } from '@angular/core';\nimport { Form } from '@angular/forms';\nimport { KorisniciService } from '../servisi/korisnici.service';\n\n@Component({\n  selector: 'app-prijava',\n  templateUrl: './prijava.component.html',\n  styleUrls: ['./prijava.component.scss'],\n})\nexport class PrijavaComponent {\n  inputLozinka: string = '';\n  inputKorime: string = '';\n  prikazLogin = false;\n  prikazReg = true;\n\n  korime: any;\n  lozinka: any;\n  ime: any;\n  prezime: any;\n  email: any;\n\n  constructor(private korisniciService: KorisniciService) {}\n\n  async prijavi() {\n    let odgovor = await this.korisniciService.prijaviKorisnika(\n      this.inputKorime,\n      this.inputLozinka\n    );\n    console.log('odgovoro ' + JSON.stringify(odgovor));\n    if (odgovor != false) {\n      sessionStorage.setItem('prijavljeniKorisnik', odgovor.uloga_id);\n      //sessionStorage.setItem('logiranBool', 'true');\n    }\n  }\n\n  registriraj() {\n    this.korisniciService.dodajKorisnika(\n      this.korime,\n      this.lozinka,\n      this.ime,\n      this.prezime,\n      this.email\n    );\n  }\n\n  ucitajSuprotno() {\n    this.prikazLogin = !this.prikazLogin;\n    this.prikazReg = !this.prikazReg;\n  }\n}\n","<div id=\"prijedlozi-kontejner\">\n  <div *ngFor=\"let film of filmoviNeodobreni\">\n    <div class=\"moji-filmovi\">\n      <div class=\"moj-film\" *ngIf=\"film.odobreno == 0\">\n        {{ film.title }} {{ film.id }}\n        <button id=\"btnOdobri\" (click)=\"odobriFilm(film.id)\">Odobri</button>\n        <button id=\"btnOdbaci\" (click)=\"odbaciFilm(film.id)\">Odbaci</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FilmoviService } from '../servisi/filmovi.service';\n\n@Component({\n  selector: 'app-prijedlozi',\n  templateUrl: './prijedlozi.component.html',\n  styleUrls: ['./prijedlozi.component.scss'],\n})\nexport class PrijedloziComponent implements OnInit {\n  filmoviNeodobreni: any;\n  filter = { odobreno: 1 };\n\n  constructor(private filmoviService: FilmoviService) {}\n\n  async ngOnInit() {\n    this.filmoviNeodobreni = await this.filmoviService.dajMojeFilmove();\n  }\n\n  odobriFilm(id: Number) {\n    this.filmoviService.odobri(id);\n  }\n\n  odbaciFilm(id: Number) {\n    this.filmoviService.odbaci(id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FilmoviI } from '../sucelja/FilmoviI';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilmoviService {\n  constructor() {}\n\n  async dajMojeFilmove() {\n    let odgovor = await fetch('http://localhost:9000/api/filmovi');\n    return JSON.parse(await odgovor.text());\n  }\n\n  async dajOdabraniFilm(idFilma: string) {\n    console.log('id filma -----> ' + idFilma);\n\n    let odgovor = await fetch('http://localhost:9000/api/filmovi/' + idFilma);\n    if (odgovor.status == 200) {\n      let podaci = await odgovor.text();\n      console.log('podaci ' + podaci);\n\n      return JSON.parse(podaci);\n    } else {\n      alert('Problem kod preuzimanja podataka:\\n' + odgovor.statusText);\n    }\n  }\n\n  async odobri(idFilma: Number) {\n    let tijelo = {\n      id: idFilma,\n    };\n    let header = new Headers();\n    header.set('Content-Type', 'application/json');\n    let parametri = {\n      method: 'PUT',\n      body: JSON.stringify(tijelo),\n      headers: header,\n    };\n    let podatki = await fetch(\n      'http://localhost:9000/api/filmovi/:id',\n      parametri\n    );\n    await podatki.text();\n  }\n\n  async odbaci(idFilma: Number) {\n    let tijelo = {\n      id: idFilma,\n    };\n    let header = new Headers();\n    header.set('Content-Type', 'application/json');\n    let parametri = {\n      method: 'DELETE',\n      body: JSON.stringify(tijelo),\n      headers: header,\n    };\n    let podatki = await fetch(\n      'http://localhost:9000/api/filmovi/:id',\n      parametri\n    );\n    await podatki.text();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class KorisniciService {\n  constructor(private router: Router) {}\n\n  async prijaviKorisnika(korime: string, lozinka: string) {\n    // lozinka = kodovi.kreirajSHA256(lozinka, 'moja sol');\n    let tijelo = {\n      korime: korime,\n      lozinka: lozinka,\n    };\n\n    let zaglavlje = new Headers();\n    zaglavlje.set('Content-Type', 'application/json');\n\n    let parametri = {\n      method: 'POST',\n      body: JSON.stringify(tijelo),\n      headers: zaglavlje,\n    };\n\n    let odgovor = await fetch(\n      'http://localhost:9000/api/korisnici/' + korime + '/prijava',\n      parametri\n    );\n\n    if (odgovor.status == 200) {\n      console.log('uspjesna prijava');\n      this.router.navigate(['/pocetna']);\n\n      let podaci = await odgovor.text();\n      console.log('podaci ' + podaci);\n\n      return JSON.parse(podaci);\n\n      //return JSON.parse(await odgovor.text());\n    } else {\n      return false;\n    }\n  }\n\n  async dodajKorisnika(\n    korime: string,\n    lozinka: string,\n    ime: string,\n    prezime: string,\n    email: string\n  ) {\n    let tijelo = {\n      korime: korime,\n      lozinka: lozinka,\n      ime: ime,\n      prezime: prezime,\n      email: email,\n    };\n\n    // TODO da sprema ko sol\n    // mozda probaj s onim ngFormom\n\n    let header = new Headers();\n    header.set('Content-Type', 'application/json');\n\n    let parametri = {\n      method: 'POST',\n      body: JSON.stringify(tijelo),\n      headers: header,\n    };\n\n    let podaci = await fetch('http://localhost:9000/api/korisnici', parametri);\n\n    return await podaci.text();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ZanroviI } from '../sucelja/ZanroviI';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZanroviService {\n  constructor() {}\n\n  async dajMojePodatke() {\n    let mojiZanrovi = new Array<ZanroviI>();\n    let odgovor = await fetch('http://localhost:9000/api/zanr'); // OVO SE CITA IZ ENVIRONMENT VARIJABLI TODO\n    mojiZanrovi = JSON.parse(await odgovor.text()) as Array<ZanroviI>;\n    return mojiZanrovi;\n  }\n\n  async dajPodatke() {\n    let tmdbZanrovi = new Array<ZanroviI>();\n    let odgovor = await fetch('http://localhost:9000/api/tmdb/zanr');\n    tmdbZanrovi = JSON.parse(await odgovor.text()).genres as Array<ZanroviI>;\n    return tmdbZanrovi;\n  }\n\n  async dodajIzTMDBAuMojuBazu(novi_id: number, novi_naziv: string) {\n    let tijelo = {\n      id: novi_id,\n      name: novi_naziv,\n    };\n\n    const zaglavlje = new Headers({ 'Content-Type': 'application/json' });\n\n    const parametri = {\n      method: 'POST',\n      body: JSON.stringify(tijelo),\n      headers: zaglavlje,\n    };\n\n    try {\n      const odgovor = await fetch('http://localhost:9000/api/zanr', parametri);\n      const data = await odgovor.text();\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async updateajZanr(id: number, novi_naziv: string) {\n    // TODO da se automatski azurira i obrise text input field\n\n    let tijelo = {\n      id: id,\n      name: novi_naziv,\n    };\n\n    let zaglavlje = new Headers();\n    zaglavlje.set('Content-Type', 'application/json');\n\n    let parametri = {\n      method: 'PUT',\n      body: JSON.stringify(tijelo),\n      headers: zaglavlje,\n    };\n\n    let podatki = await fetch('http://localhost:9000/api/zanr/:id', parametri);\n    await podatki.text();\n  }\n\n  async izbrisiBezFilmova(podaci: any) {\n    let zanrovi_parse = JSON.parse(podaci);\n    let tijelo = {\n      zanrovi: zanrovi_parse,\n    };\n\n    let zaglavlje = new Headers();\n    zaglavlje.set('Content-Type', 'application/json');\n\n    let parametri = {\n      method: 'DELETE',\n      body: JSON.stringify(tijelo),\n      headers: zaglavlje,\n    };\n\n    let podatki = await fetch('http://localhost:9000/api/zanr', parametri);\n    await podatki.text();\n  }\n}\n","<div class=\"zanrovi-gumbi\">\n  <button class=\"lijepiGumb\" id=\"dajPodatke\" (click)=\"prikaziTMDBZanrove()\">\n    Ucitaj zanrove TMDB\n  </button>\n  <button class=\"lijepiGumb\" id=\"dajMojePodatke\" (click)=\"prikaziMojeZanrove()\">\n    Ucitaj zanrove moja baza\n  </button>\n  <button class=\"lijepiGumb\" id=\"dodajTMDBPodatke\" (click)=\"dodajTMDBPodatke()\">\n    Dodaj iz TMDB-a u moju bazu\n  </button>\n  <button class=\"lijepiGumb\" id=\"promijeniNaziv\" (click)=\"promijeniNaziv()\">\n    Promijeni naziv odabranog\n  </button>\n  <button\n    class=\"lijepiGumb\"\n    id=\"izbrisiBezFilmova\"\n    (click)=\"dajMojePodatkeBrisanje()\"\n  >\n    Izbrisi sve zanrove bez filmova\n  </button>\n</div>\n<div id=\"zanrovi-container\">\n  <ul *ngFor=\"let zanr of zanroviTMDB\">\n    <li>\n      <input\n        type=\"radio\"\n        id=\"{{ zanr.id }}\"\n        name=\"tmdb-zanrovi\"\n        value=\"{{ zanr.name }}\"\n        (change)=\"onChangeOdabraniRadioTmdb($event, zanr.id)\"\n      />\n      {{ zanr.name }} {{ zanr.id }}\n    </li>\n  </ul>\n</div>\n<div id=\"zanrovi-container-moje\">\n  <ul *ngFor=\"let zanr of zanroviMoji\">\n    <li>\n      <input\n        type=\"radio\"\n        id=\"{{ zanr.id }}\"\n        name=\"moji-zanrovi\"\n        value=\"{{ zanr.name }}\"\n        (change)=\"onChangeOdabraniRadioMoj($event, zanr.id)\"\n      />\n      {{ zanr.name }} {{ zanr.id }}\n    </li>\n  </ul>\n</div>\n<div id=\"informacije-zanrovi\"></div>\n<input type=\"text\" id=\"inputPromjenaNaziva\" [(ngModel)]=\"noviNaziv\" />\n","import { Component } from '@angular/core';\nimport { ZanroviService } from '../servisi/zanrovi.service';\n\n@Component({\n  selector: 'app-zanr',\n  templateUrl: './zanr.component.html',\n  styleUrls: ['./zanr.component.scss'],\n})\nexport class ZanrComponent {\n  zanroviMoji: any;\n  zanroviTMDB: any;\n  odabraniRadioNameTmdb: string = '';\n  odabraniRadioIdTmdb: number = 0; // neki defaultni broj\n  odabraniRadioNameMoj: string = '';\n  odabraniRadioIdMoj: number = 0; // neki defaultni broj\n  noviNaziv: any; // two way binding\n  constructor(private zanroviService: ZanroviService) {}\n\n  async prikaziMojeZanrove() {\n    this.zanroviMoji = await this.zanroviService.dajMojePodatke();\n  }\n\n  async prikaziTMDBZanrove() {\n    this.zanroviTMDB = await this.zanroviService.dajPodatke();\n  }\n\n  onChangeOdabraniRadioTmdb(event: any, id: number) {\n    // koji je trenutno odabran\n    this.odabraniRadioNameTmdb = event.target.value;\n    this.odabraniRadioIdTmdb = id;\n  }\n\n  onChangeOdabraniRadioMoj(event: any, id: number) {\n    this.odabraniRadioNameMoj = event.target.value;\n    this.odabraniRadioIdMoj = id;\n  }\n\n  // TODO provjeri jel vec postoji u bazi taj\n  dodajTMDBPodatke() {\n    this.zanroviService.dodajIzTMDBAuMojuBazu(\n      this.odabraniRadioIdTmdb,\n      this.odabraniRadioNameTmdb\n    );\n  }\n\n  promijeniNaziv() {\n    this.zanroviService.updateajZanr(this.odabraniRadioIdMoj, this.noviNaziv);\n  }\n\n  async dajMojePodatkeBrisanje() {\n    try {\n      let odgovor = await fetch('http://localhost:9000/api/zanr');\n      if (odgovor.status === 200) {\n        const podaci = await odgovor.text();\n        this.zanroviService.izbrisiBezFilmova(podaci);\n      } else {\n        alert(`Problem kod preuzimanja podataka: ${odgovor.statusText}`);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","FilmDetaljiComponent","PocetnaComponent","PregledFilmovaComponent","PrijavaComponent","PrijedloziComponent","ZanrComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","consts","template","i0","BrowserModule","FormsModule","NavigacijaComponent","AppModule","bootstrap","declarations","aktiviranRoute","filmoviServis","ngOnInit","filmId","snapshot","paramMap","get","console","log","odabraniFilm","dajOdabraniFilm","cdr","sessionStorage","getItem","odjaviKorisnika","setItem","ngAfterContentChecked","detectChanges","zanroviService","prikaziMojeZanrove","zanroviMoji","dajMojePodatke","filmoviService","odobreno","filmoviOdobreni","dajMojeFilmove","korisniciService","prijavi","odgovor","prijaviKorisnika","inputKorime","inputLozinka","JSON","stringify","uloga_id","registriraj","dodajKorisnika","korime","lozinka","ime","prezime","email","ucitajSuprotno","prikazLogin","prikazReg","filmoviNeodobreni","odobriFilm","id","odobri","odbaciFilm","odbaci","FilmoviService","fetch","parse","text","idFilma","status","podaci","alert","statusText","tijelo","header","Headers","set","parametri","method","body","headers","podatki","factory","providedIn","KorisniciService","router","zaglavlje","navigate","ZanroviService","mojiZanrovi","Array","dajPodatke","tmdbZanrovi","genres","dodajIzTMDBAuMojuBazu","novi_id","novi_naziv","name","data","error","updateajZanr","izbrisiBezFilmova","zanrovi_parse","zanrovi","prikaziTMDBZanrove","zanroviTMDB","onChangeOdabraniRadioTmdb","event","odabraniRadioNameTmdb","target","value","odabraniRadioIdTmdb","onChangeOdabraniRadioMoj","odabraniRadioNameMoj","odabraniRadioIdMoj","dodajTMDBPodatke","promijeniNaziv","noviNaziv","dajMojePodatkeBrisanje","ctx","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}